<?xml version="1.0" encoding="utf-8"?>
<Configuration>

	<!--These are some of the loggers you can enable. 
	    There are several more you can find in the documentation. 
        Besides this log4j configuration, you can also use Java VM environment variables
        to enable other logs like network (-Djavax.net.debug=ssl or all) and 
        Garbage Collector (-XX:+PrintGC). These will be append to the console, so you will 
        see them in the mule_ee.log file. -->


    <Appenders>
        <RollingFile name="file" fileName="${sys:mule.home}${sys:file.separator}logs${sys:file.separator}muledemo.log" 
                 filePattern="${sys:mule.home}${sys:file.separator}logs${sys:file.separator}muledemo-%i.log">
            <PatternLayout pattern="%d [%t] %-5p %c - %m%n" />
            <SizeBasedTriggeringPolicy size="10 MB" />
            <DefaultRolloverStrategy max="10"/>
        </RollingFile>
		<Socket name="SOCKET-SPLUNK" host="192.168.1.13" port="8099" protocol="TCP">
             <PatternLayout pattern="[%d{MM-dd HH:mm:ss.SSS}] %-5p %c{1} [%t]: %m%n"/>
         </Socket>
         <!-- <Log4J2CloudhubLogAppender name="CLOUDHUB"
                                    addressProvider="com.mulesoft.ch.logging.DefaultAggregatorAddressProvider"
                                    applicationContext="com.mulesoft.ch.logging.DefaultApplicationContext"
                                    appendRetryIntervalMs="${sys:logging.appendRetryInterval}"
                                    appendMaxAttempts="${sys:logging.appendMaxAttempts}"
                                    batchSendIntervalMs="${sys:logging.batchSendInterval}"
                                    batchMaxRecords="${sys:logging.batchMaxRecords}"
                                    memBufferMaxSize="${sys:logging.memBufferMaxSize}"
                                    journalMaxWriteBatchSize="${sys:logging.journalMaxBatchSize}"
                                    journalMaxFileSize="${sys:logging.journalMaxFileSize}"
                                    clientMaxPacketSize="${sys:logging.clientMaxPacketSize}"
                                    clientConnectTimeoutMs="${sys:logging.clientConnectTimeout}"
                                    clientSocketTimeoutMs="${sys:logging.clientSocketTimeout}"
                                    serverAddressPollIntervalMs="${sys:logging.serverAddressPollInterval}"
                                    serverHeartbeatSendIntervalMs="${sys:logging.serverHeartbeatSendIntervalMs}"
                                    statisticsPrintIntervalMs="${sys:logging.statisticsPrintIntervalMs}">

             <PatternLayout pattern="[%d{MM-dd HH:mm:ss}] %-5p %c{1} [%t] CUSTOM: %m%n"/>
         </Log4J2CloudhubLogAppender> -->
    </Appenders>
    <Loggers>
    	
    	
		<!-- Http Logger shows wire traffic on DEBUG -->
		<AsyncLogger name="org.mule.module.http.internal.HttpMessageLogger" level="WARN"/>
	
		<!-- JDBC Logger shows queries and parameters values on DEBUG -->
		<AsyncLogger name="com.mulesoft.mule.transport.jdbc" level="WARN"/>
    
        <!-- CXF is used heavily by Mule for web services -->
        <AsyncLogger name="org.apache.cxf" level="WARN"/>

        <!-- Apache Commons tend to make a lot of noise which can clutter the log-->
        <AsyncLogger name="org.apache" level="WARN"/>

        <!-- Reduce startup noise -->
        <AsyncLogger name="org.springframework.beans.factory" level="WARN"/>

        <!-- Mule classes -->
        <AsyncLogger name="org.mule" level="INFO"/>
        <AsyncLogger name="com.mulesoft" level="INFO"/>

        <!-- Reduce DM verbosity -->
        <AsyncLogger name="org.jetel" level="WARN"/>
        <AsyncLogger name="Tracking" level="WARN"/>
        
        <AsyncRoot level="INFO">
            <AppenderRef ref="file" />
        </AsyncRoot>
		<AsyncLogger name="splunk.logger" level="INFO">
		   <AppenderRef ref="SOCKET-SPLUNK" />
		</AsyncLogger>
    </Loggers>
</Configuration>